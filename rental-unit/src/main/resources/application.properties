spring.application.name=rental-unit-service
server.port=8086

spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.datasource.url=jdbc:postgresql://localhost:5432/ms_rental_units
spring.datasource.user=Juanem
spring.datasource.password=root

#EUREKA NETFLIX
eureka.instance.prefer-ip-address=true
eureka.client.service-url.default-zone=http://eureka:password@localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#SQL
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=true
spring.jpa.properties.hibernate.format_sql=true

#Actuator
management.endpoints.web.exposure.include=health
management.endpoints.web.base-path=/actuator/rental-units
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

#RESILIENCE4J - CircuitBreaker
resilience4j.circuitbreaker.instances.rental-unit-service.register-health-indicator=true

#si el numero de fallas consecutivo, alcanza el umbral definido dentro de la ventana deslizante, el circuitbreaker se abrira y bloqueara todas las solicitudes al servicio externo o dependencia ext

resilience4j.circuitbreaker.instances.rental-unit-service.sliding-window-size=5
resilience4j.circuitbreaker.instances.rental-unit-service.sliding-window-type=count_based

#% de llamadas fallidas antes de q se abra el circuitbreaker
resilience4j.circuitbreaker.instances.rental-unit-service.failure-rate-threshold=50

#tiempo de espera para una nueva llamada al servicio externo
resilience4j.circuitbreaker.instances.rental-unit-service.wait-duration-in-open-state=10s

#transicion automatica de cambio de estado luego de la espera de los 10s seteados arriba
resilience4j.circuitbreaker.instances.rental-unit-service.automatic-transition-from-open-to-half-open-enabled=true

#cantidad de llamadas permitidas en el estado medio abierto
resilience4j.circuitbreaker.instances.rental-unit-service.permitted-number-of-calls-in-half-open-state=3

#Tracing
management.zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
management.tracing.sampling.probability=1.0

logging.pattern.level=%5p [${spring.application.name}, %X{traceId:-}, %X{spanId:-}]